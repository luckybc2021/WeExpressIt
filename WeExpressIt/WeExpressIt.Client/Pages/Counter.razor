@page "/counter"
@using VUI
@rendermode InteractiveWebAssembly

<PageTitle>Demo Counter with VUIButton</PageTitle>

<h1>Demo Counter with VUIButton</h1>

<select @bind="transitionType">
    <option>UIState</option>
    <option>UserDecision</option>
</select>

<VUIButton Text="Click me"
           TransitionType="@transitionType"
           Normal_BackgroundColor="#00ffff" 
           Clicked_BackgroundColor="#9900cc"
           MouseEnter_BackgroundColor="#00ff00"
           MouseLeave_BackgroundColor="#ffff00"
           MouseDown_BackgroundColor="#ff0066"
           MouseUp_BackgroundColor="#ff00ff"
           OnClicked="OnClicked"
           OnMouseDown="OnMouseDown"
           OnMouseLeave="OnMouseLeave" />

<p role="status">Current count: @currentCount</p>

<VUIButton ContentType="Image"
           ContentPath="Images/reset-icon-32.png"
           Normal_BackgroundColor="#00ffff"
           Clicked_BackgroundColor="#9900cc"
           MouseEnter_BackgroundColor="#00ff00"
           OnClicked="OnClicked_ResetCounting" />


<VUIElement ContentType="Video"
            ContentPath="Videos/ShortVideo.mp4"
            Width="32px"
            Height="32px"
            OnReadyToUse="OnReadyToUse_PlayVideo"/>


@code {
    VUIElement video;
    private int currentCount = 0;
    private string transitionType = "UIState";

    private void OnClicked(VUIElement btn)
    {
        currentCount++;
    }

    private async void OnClicked_ResetCounting(VUIElement btn)
    {
        currentCount = 0;

        await video.PlayVideo();
    }

    private async void OnMouseDown(VUIElement btn)
    {
        await TransitionManager.TransitionTo(btn, 0, "MouseDown", 0, new string[] { "Clicked" });
    }

    private async void OnMouseLeave(VUIElement btn)
    {
        await TransitionManager.TransitionTo(btn, 300, "Normal", 0, new string[] { "All" });

        TransitionManager.StopTransition(btn);
    }

    private void OnReadyToUse_PlayVideo(VUIElement _video)
    {
        video = _video;
    }
}
